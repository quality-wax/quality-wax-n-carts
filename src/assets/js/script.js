initMap = !1, function (i) { if ("undefined" == typeof jQuery) throw "Requires jQuery to be loaded first"; !function (c, t) { "use strict"; c("body"); var i, a = function () { i && clearTimeout(i), i = setTimeout(function () { c(window).trigger("resize").trigger("scroll"), i = null }, 50) }, o = "ageVerification"; function n() { c(window).off("load.loader"), c(".page-loader").fadeOut(500, function () { c(this).remove() }), "yes" === t.get(o) ? c(".age-popup").addClass("disabled") : c(".age-popup").addClass("show") } c('[data-role="age-yes"]').on("click", function (e) { e.preventDefault(), t.set(o, "yes"), c(".age-popup").removeClass("show") }), c('[data-role="age-no"]').on("click", function () { e.preventDefault(), t.set(o, "no"); var i = c(this).data("redirectUrl"); i && (window.location.href = i) }), c(window).on("load.loader", function () { n() }), setTimeout(n, 1e4), c("[data-bar]").each(function (e, i) { var t = c(i), a = 100 * parseFloat(parseFloat(t.attr("aria-valuenow") / t.attr("aria-valuemax"))); a < 0 ? a = 0 : 100 < a && (a = 100), t.css("width", a + "%") }), c(".navbar-toggler").on("click", function (e) { e.preventDefault(), c(this).toggleClass("active").closest("header").toggleClass("active") }), c('[data-role="nav-toggler"], .nav-arrow').on("click", function (e) { e.preventDefault(), c(this).parent().toggleClass("active") }), c('[data-role="nav-self-toggle"]').on("click", function (e) { e.preventDefault(), c(this).toggleClass("active") }); var s = function () { 0 < c(window).scrollTop() ? (c(".scroll-top").removeClass("disabled"), window.innerHeight + window.scrollY >= document.body.offsetHeight ? c(".scroll-top").addClass("end") : c(".scroll-top").removeClass("end")) : c(".scroll-top").addClass("disabled") }; s(), c(window).on("scroll resize orientationchange focus", s), c(".scroll-top").on("click", function (e) { e.preventDefault(), c("html, body").animate({ scrollTop: 0 }, 1e3) }), c(".form-check .form-check-icon").on("click", function (e, i) { var t = c(this).closest(".form-check").find("input.form-check-input"), a = "radio" === t.attr("type") || !t.prop("checked"); t.prop("checked", a) }), c('[data-role="accordion-item"]').each(function (e, i) { var t = c(i); t.find('[data-role="accordion-toggle"]').on("click", function (e) { e.preventDefault(); var i = t.closest('[data-role="accordion-list"]'); i.find('[data-role="accordion-item"]').not(t).removeClass("active"), t.addClass("active"), i.trigger("resize"), setTimeout(function () { a() }, 2e3) }) }), c('[data-role="accordion-list"]').each(function (e, i) { var t = c(i), a = function () { var e = t.find('.active[data-role="accordion-item"] [data-role="accordion-content"]'); e.length ? (e = e[0], t.css("minHeight", Math.max(e.clientHeight, e.offsetHeight, e.scrollHeight))) : t.css("minHeight", "") }; t.on("resize", a), c(window).on("resize", a), t.find("[src]").on("load", a), a() }), c("[data-left]").each(function (e, i) { c(i).css("left", c(i).data("left")) }), c("[data-top]").each(function (e, i) { c(i).css("top", c(i).data("top")) }), c("[data-svg]").each(function (e, i) { var t = c(i); t.load(t.data("svg"), null, a) }), c("[data-background]").each(function (e, i) { var t = c(i); t.css("backgroundImage", "url(" + t.data("background") + ")") }), c('[data-slider="top-main"]').each(function (e, i) { c(i).find(".slick-slides").slick({ infinite: !0, dots: !1, arrows: !1, asNavFor: '[data-slider="top-thumb"] .slick-slides' }) }), c('[data-slider="top-side-dots"]').each(function (e, i) { c(i).find(".slick-slides").slick({ infinite: !0, dots: !0, arrows: !1 }) }), c('[data-slider="top-thumb"]').each(function (e, i) { var t = c(i); t.find(".slick-slides").slick({ slidesToShow: 3, centerPadding: 0, centerMode: !0, infinite: !0, dots: !1, arrows: !0, focusOnSelect: !0, swipeToSlide: !0, nextArrow: t.find(".slick-arrow-next"), prevArrow: t.find(".slick-arrow-prev"), asNavFor: '[data-slider="top-main"] .slick-slides', responsive: [{ breakpoint: 992, settings: { slidesToShow: 3 } }, { breakpoint: 768, settings: { slidesToShow: 2 } }, { breakpoint: 576, settings: { slidesToShow: 1 } }] }) }), c('[data-slider="images-carousel"]').each(function (e, i) { var t = c(i); t.find(".slick-slides").slick({ slidesToShow: 4, infinite: !0, dots: !1, arrows: !0, swipeToSlide: !0, nextArrow: t.find(".slick-arrow-next"), prevArrow: t.find(".slick-arrow-prev"), responsive: [{ breakpoint: 992, settings: { slidesToShow: 3 } }, { breakpoint: 768, settings: { slidesToShow: 2 } }, { breakpoint: 576, settings: { slidesToShow: 1 } }] }) }), c('[data-slider="quick-products"]').each(function (e, i) { var t = c(i); t.find(".slick-slides").slick({ slidesToShow: 3, infinite: !0, dots: !1, arrows: !0, focusOnSelect: !0, swipeToSlide: !0, nextArrow: t.find(".slick-arrow-next"), prevArrow: t.find(".slick-arrow-prev"), responsive: [{ breakpoint: 992, settings: { slidesToShow: 2 } }, { breakpoint: 768, settings: { slidesToShow: 1 } }] }) }), c('[data-slider="testimonials"]').each(function (e, i) { var t = c(i); t.find(".slick-slides").slick({ slidesToShow: 3, infinite: !0, dots: !1, arrows: !0, focusOnSelect: !0, swipeToSlide: !0, nextArrow: t.find(".slick-arrow-next"), prevArrow: t.find(".slick-arrow-prev"), responsive: [{ breakpoint: 992, settings: { slidesToShow: 2 } }, { breakpoint: 768, settings: { slidesToShow: 1 } }] }) }), c('[data-role="fill-line"]').each(function (e, i) { var r, t = c(i), a = t.find('> [data-role="fill-line-segment"]'), n = c([]), l = 100, d = 100, s = t.width(); a.each(function (e, i) { var t = c(i), a = t.data(), o = a.hasOwnProperty("minWidth") ? a.minWidth : 0; a.hasOwnProperty("width") ? (r = a.width, a.hasOwnProperty("maxWidth") && a.maxWidth, s < a.minWidth && (s = a.minWidth), s > a.maxWidth && (s = a.maxWidth), l -= s, t.width(s + "%")) : (n = n.add(t), d -= o) }), n.each(function (e, i) { var t = c(i), a = t.data(), o = a.hasOwnProperty("maxWidth") ? a.maxWidth : 100, n = a.hasOwnProperty("minWidth") ? a.minWidth : 0, s = a.hasOwnProperty("prefferedWidth") ? a.prefferedWidth : a.minWidth + (a.maxWidth - a.minWidth) / 2; o = Math.min(o, s, d, l), r = o <= n ? n : Math.random() * (o - n) + n, l -= r, t.width(r + "%") }), 0 < l && a.last().width(r + l + "%") }), c(".input-spin").each(function (e, i) { var t = c(i), o = t.find(".form-control"), n = t.find(".input-decrement"), s = t.find(".input-increment"), a = function (e) { var i = parseInt(o.val()), t = parseInt(o.attr("min")), a = parseInt(o.attr("max")); e && (i = isNaN(i) ? 0 : i + e, o.val(i)), !isNaN(t) && i <= t ? (n.addClass("disabled"), o.val(t)) : n.removeClass("disabled"), !isNaN(a) && a <= i ? (s.addClass("disabled"), o.val(a)) : s.removeClass("disabled") }; a(), o.on("blur", function () { a() }), n.on("click", function () { a(-1) }), s.on("click", function () { a(1) }) }), c(".shuffle-js").each(function (e, i) { var a = c(i), t = c(i).find(".shuffle-items"), o = new Shuffle(t[0], { itemSelector: ".shuffle-item" }), n = a.find("[data-filter]"); n.on("click", function (e) { e.preventDefault(), a.find(".shuffle-empty").css("display", "none"); var i, t = c(this); try { i = JSON.parse(t.data("filter")) } catch (e) { i = t.data("filter") } n.removeClass("active"), t.addClass("active"), o.filter(i) }), o.on(Shuffle.EventType.LAYOUT, function () { c(window).trigger("resize"), a.find(".shuffle-empty").css("display", o.visibleItems ? "none" : "block") }) }), c(".form-control-file").each(function (e, i) { var t = c(i); t.on("change.fileField", function () { var e = c(this).closest(".input-group-file").find(".form-control"); e.val(this.value ? this.value : e.attr("data-value-current") || "") }).triggerHandler("change.fileField"); var a = t.closest("form"); a.length && a.data("fileFields", (a.data("fileFields") || c([])).add(t)).off(".fileFields").on("reset.fileFields", function () { var e = c(this); setTimeout(function () { e.data("fileFields").each(function (e, i) { c(i).triggerHandler("change.fileField") }) }) }), t.closest(".input-group-file").find(".form-control, .form-control-file-btn").on("click", function (e) { e.preventDefault(), t.trigger("click") }) }), "undefined" != typeof FileReader && c(".file-preview").each(function (e, i) { var t = c(i), a = !1, o = c(i).closest(".form-group-preview").find(".form-control-file"); t.find(".file-preview-image img") && t.addClass("has-file"), t.on("click", function (e) { e.preventDefault(), o.trigger("click") }), (a = new FileReader).onloadstart = function () { t.removeClass("has-file") }, a.onload = function (e) { t.find(".file-preview-image").empty().html('<img src="' + e.target.result + '" alt="" />'), t.addClass("has-file") }, o.on("change.imageField", function () { var e = this.files ? this.files : this.currentTarget.files; e.length ? a.readAsDataURL(e[0]) : t.removeClass("has-file").find(".file-preview-image").empty() }); var n = t.closest("form"); n.length && n.data("imageFields", (n.data("imageFields") || c([])).add(o)).off(".imageFields").on("reset.imageFields", function () { var e = c(this); setTimeout(function () { e.data("imageFields").each(function (e, i) { c(i).find('input[type="file"]').triggerHandler("change.imageField") }) }) }) }); c("[data-theme-accordion] .entity-expand-head").on("click", function (e) { e.preventDefault(); var i = c(this).closest("[data-theme-accordion]"), t = i.data("themeAccordion"); c('.active[data-theme-accordion="' + t + '"]').not(i).removeClass("active"), i.toggleClass("active") }), gMapStyles = "undefined" == typeof gMapStyles ? {} : gMapStyles, initMap = function () { var d = {}; c.each(gMapStyles, function (e, i) { d[e] = new google.maps.StyledMapType(i.styles, i.options) }), c(".gmap").each(function (e, i) { var t = c(i), a = t.data(), o = { lat: a.lat, lng: a.lng }, n = { lat: a.centerLat || o.lat, lng: a.centerLng || o.lng }, s = new google.maps.Map(i, { center: 768 <= c(window).width() ? n : o, zoom: a.zoom || 15, scrollwheel: !1, zoomControl: !0, zoomControlOptions: { position: google.maps.ControlPosition.LEFT_CENTER }, streetViewControl: !0, streetViewControlOptions: { position: google.maps.ControlPosition.LEFT_BOTTOM }, mapTypeControlOptions: { mapTypeIds: ["roadmap", "satellite", "hybrid", "terrain", "styled_map"] } }), r = a.mapStyle && d[a.mapStyle] ? a.mapStyle : "default", l = !!d[r] && d[r]; new google.maps.Marker({ position: o, map: s, icon: a.marker || "./assets/images/parts/map-marker.png" }), l && (s.mapTypes.set(r, l), s.setMapTypeId(r)), c(window).on("resize", function () { google.maps.event.trigger(s, "resize"), s.setCenter(768 <= c(window).width() ? n : o) }) }) } }(jQuery, Cookies) }();